<?xml version="1.0"?>
<sdf version="1.6">
    <model name="plant_4">
    	<static>false</static>
       <link name="link_0_1">
        <pose>0 0 0 0 0 0</pose>
        <inertial>
          <!-- This mass is unrelated, inertias default to 1, they seem unrelated-->
          <mass>30</mass>
        </inertial>
         <visual name="visual">
          <pose>0 0 0 1.57 0 -0.277507351</pose>
          <geometry>
            <mesh><uri>model://plant/meshes/plant.obj</uri></mesh>
          </geometry>
        </visual>
        <collision name="collision">
          <pose>0 0 0.25 0 0 0</pose>
          <geometry>
            <box><size>0.5 0.5 0.5</size></box>
          </geometry>
        </collision>
      </link>
      <model name="tomato">
      <pose>-0.297 0.244 0.669 0 0 0</pose>
      <link name="t_link">
        <pose>-0 0 0 0 0 0</pose>
<!--       <link name="t_link">
      <pose>-0.297 0.244 0.669 0 0 0</pose> -->
        <inertial>
          <!-- Try with different masses and figure out the force relation, currently it breaks at 98N -->
          <mass>0.1</mass>
        </inertial>
        <collision name="collision">
          <geometry>
            <sphere><radius>0.05</radius></sphere>
          </geometry>
        </collision>
        <visual name="visual">
          <geometry>
            <mesh><uri>model://tomato/meshes/tomato.obj</uri></mesh>
          </geometry>
        </visual>
        <!-- Nested model was also tried but there is some GUI bug that does not allow me to apply force to the link in case of nested model, see that approach in bak.sdf -->
      </link>
    </model>
          <joint name="joint_0_0" type="revolute">
      <parent>link_0_1</parent>
      <!-- The parent link is world in the examples but gazebo crashes on detach in that case! -->
      <child>tomato::t_link</child>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0.0</lower>
          <upper>0.0</upper>
        </limit>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <erp>1</erp>
          <cfm>1</cfm>
        </ode>
      </physics>
      <sensor name="force_torque" type="force_torque">
        <always_on>true</always_on>
        <!-- Update rate will not matter in real robot, in force torque default example (not plugin example) they have used 30, but when applying instantaneous force for testing 1000 is better as it will not cause "misses" after clicking apply force in real robot even a update rate of 1 will do as the robot will apply continuous force, we can thus simulate it taking variable time to actually cut!-->
        <update_rate>1</update_rate>
        <plugin name="breakable_0_0" filename="libBreakableJointPlugin.so">
          <!-- Breaking force of 6 with mass 0.1 crashed Gazebo at launch -->
          <breaking_force_N>10</breaking_force_N>
        </plugin>
      </sensor>
    </joint>
  </model>
</sdf>
